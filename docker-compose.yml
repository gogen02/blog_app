services:
  web:
    container_name: blog_app
    build: .
      # command: python manage.py runserver 0.0.0.0:8000
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/site.conf:/etc/nginx/conf.d/site.conf:ro
      - static:/app/static
      - media:/app/media
    environment:
      NGINX_SET_REAL_IP_FROM: 192.168.1.0/24
    depends_on:
      - api
    ports:
      - ${NGINX_PORT}:80

volumes:
  postgres_data:
