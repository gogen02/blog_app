volumes:
  postgres_data:
  media:
  static:

networks:
  API:
    driver: bridge


services:
  web:
    container_name: blog_app
    build:
      context: .
      network: host
    ports:
      - ${API_PORT}:${API_PORT}
    networks:
      - API
    volumes:
      - static:/opt/app/static
      - media:/opt/app/media
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    networks:
      - API
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    networks:
      - API
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/site.conf:/etc/nginx/conf.d/site.conf:ro
      - static:/opt/app/static
      - media:/opt/app/media
    command: /bin/sh -c "rm -f /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    environment:
      NGINX_SET_REAL_IP_FROM: 192.168.0.0/24
    depends_on:
      - web
    ports:
      - ${NGINX_PORT}:80

